name: Android Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get repository name
        id: repository
        run: echo "name=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}" >> $GITHUB_OUTPUT

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Decode keystore from secret
        run: |
          echo "${{ secrets.SIGNING_KEY }}" | base64 -d > release.jks

      - name: Decode Firebase credentials
        run: |
          echo "${{ secrets.FIREBASE_CREDENTIALS }}" | base64 -d > firebase.json

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build APK (Release)
        run: ./gradlew assembleRelease appDistributionUploadRelease --stacktrace
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          STORE_FILE: ${{ github.workspace }}/release.jks
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase.json
          FIREBASE_RELEASE_NOTES: これはリリースノートです。
          FIREBASE_GROUPS : Athlete

      - name: Locate and rename generated APK
        id: find_apk
        run: |
          APK_PATH=$(find ${{ github.workspace }}/app -name "*.apk" | head -n 1)
          NEW_APK_PATH=${{ github.workspace }}/${{ steps.repository.outputs.name }}.${{ github.ref_name }}.apk
          cp "$APK_PATH" "$NEW_APK_PATH"
          echo "APK found at: $APK_PATH"
          echo "New APK path: $NEW_APK_PATH"
          echo "release_apk_path=$NEW_APK_PATH" >> $GITHUB_OUTPUT

      # Ensure workflow permissions: Settings > Actions > General > Workflow permissions: Read and write
      - name: Upload APK to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: APK ${{ github.ref_name }}
          files: ${{ steps.find_apk.outputs.release_apk_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up GitHub CLI
        run: sudo apt-get install gh -y

      - name: Create tag and release on external repository
        env:
          GH_TOKEN: ${{ secrets.PAT_FOR_TEST_APK_HELLO_REL }}
          TAG_NAME: ${{ github.ref_name }}
          APK_PATH: ${{ steps.find_apk.outputs.release_apk_path }}
        run: |
          gh api \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            /repos/jp-96/test-apk-hello-rel/git/refs \
            -f ref="refs/tags/$TAG_NAME" \
            -f sha="$(gh api /repos/jp-96/test-apk-hello-rel/commits/main --jq .sha)"
          gh release create "$TAG_NAME" \
            --repo jp-96/test-apk-hello-rel \
            --title "APK $TAG_NAME" \
            --notes "Automated release from CI" \
            "$APK_PATH"
